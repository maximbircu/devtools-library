name: CI

on:
  pull_request:
    branches: [ master ]

jobs:
  pullreqest:
    name: Check pull request styling
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
    steps:
      - name: Check branch name and commit messages style
        uses: maximbircu/pull-request-checkstyle@v1.0.0
        with:
          branch-name-regex: '\d+(-([a-z])+)+'
          commit-message-title-regex: '^[A-Z].*'

  android-checkstyle:
    name: Check project styling (Android lint, Detekt and Ktlint)
    runs-on: ubuntu-latest
    steps:
      - name: SCM
        uses: actions/checkout@v2

      - name: Android lint
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: lint

      - name: Detekt
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: detekt

      - name: Ktlint
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: ktlint

  ios-checkstyle:
    name: Check ios project styling (SwiftLint)
    runs-on: ubuntu-latest
    steps:
      - name: SCM
        uses: actions/checkout@v2

      - name: SwiftLint (Only files changed in the PR)
        uses: norio-nomura/action-swiftlint@3.1.0
        env:
          DIFF_BASE: ${{ github.base_ref }}

  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: SCM
        uses: actions/checkout@v2

      - name: Test
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: testDebugUnitTest

      - name: JaCoCo
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: jacocoTestReport

      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  ios-test:
    name: iOS unit tests
    runs-on: macos-latest
    defaults:
      run:
        working-directory: devtools/ios
    steps:
      - name: SCM
        uses: actions/checkout@v2

      - name: Generate fat frramework
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: releaseFatFramework

      - name: Install Framework pod dependencies
        run: pod install

      - name: Framework Build and Test
        run: |
          xcodebuild clean test \
            -workspace DevtoolsFramework.xcworkspace \
            -scheme DevtoolsFramework \
            -destination 'platform=iOS Simulator,name=iPhone 11 Pro'

  build:
    name: Assemble artifacts
    runs-on: macos-latest
    steps:
      - name: SCM
        uses: actions/checkout@v2

      - name: Assemble
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: assembleDebug
